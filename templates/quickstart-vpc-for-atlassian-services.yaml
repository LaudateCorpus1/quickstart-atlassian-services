---
AWSTemplateFormatVersion: '2010-09-09'
Description: 'Master Template for Atlassian Services (qs-1p9o4n3sq)'
Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
      - Label:
          default: ' VPC Network Configuration'
        Parameters:
          - AccessCIDR
          - AvailabilityZones
          - PrivateSubnet1CIDR
          - PrivateSubnet2CIDR
          - PublicSubnet1CIDR
          - PublicSubnet2CIDR
          - VPCCIDR
      - Label:
          default: Amazon EC2 Configuration
        Parameters:
          - KeyPairName
          - NATInstanceType
      - Label:
          default: AWS Quick Start Configuration
        Parameters:
          - ExportPrefix
          - QSS3BucketName
          - QSS3KeyPrefix
    ParameterLabels:
      AccessCIDR:
        default: Permitted IP Range
      AvailabilityZones:
        default: Availability Zones
      ExportPrefix:
        default: ASI identifier
      KeyPairName:
        default: Key Name
      NATInstanceType:
        default: NAT Instance Type
      PrivateSubnet1CIDR:
        default: Private Subnet 1 CIDR
      PrivateSubnet2CIDR:
        default: Private Subnet 2 CIDR
      PublicSubnet1CIDR:
        default: Public Subnet 1 CIDR
      PublicSubnet2CIDR:
        default: Public Subnet 2 CIDR
      QSS3BucketName:
        default: Quick Start S3 Bucket Name
      QSS3KeyPrefix:
        default: Quick Start S3 Key Prefix
      VPCCIDR:
        default: VPC CIDR
Parameters:
  AccessCIDR:
    AllowedPattern: ^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\/([0-9]|[1-2][0-9]|3[0-2]))$
    Description: CIDR block allowed to access Atlassian Services. This should be set to a trusted IP range; if you want to give public access use '0.0.0.0/0'.
    Type: String
  AvailabilityZones:
    Description: 'List of Availability Zones to use for the subnets in the VPC. Note: You must specify 2 AZs here; 
      if more are specified only the first 2 will be used.'
    Type: List<AWS::EC2::AvailabilityZone::Name>
  ExportPrefix:
    Default: ATL-
    Description: Identifier used in all variables exported from this deploymentâ€™s Atlassian Standard Infrastructure (VPCID, SubnetIDs, KeyName). Use different identifier to deploy multiple Atlassian Standard Infrastructures in the same AWS region.
      Quickstarts.
    Type: String
  KeyPairName:
    Description: Public/private key pairs allow you to securely connect to your instance
      after it launches
    Type: AWS::EC2::KeyPair::KeyName
  NATInstanceType:
    Default: t3.small
    AllowedValues:
      - t3.nano
      - t3.micro
      - t3.small
      - t3.medium
      - t3.large
      - t2.nano
      - t2.micro
      - t2.small
      - t2.medium
      - t2.large
      - m3.medium
      - m3.large
      - m4.large
    Description: Amazon EC2 instance type for the NAT Instances. This is only used
      if the region does not support NAT gateways.
    Type: String
  PrivateSubnet1CIDR:
    Default: 10.0.0.0/19
    AllowedPattern: ^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\/([0-9]|[1-2][0-9]|3[0-2]))$
    Description: CIDR block for private subnet 1 located in Availability Zone 1.
    Type: String
  PrivateSubnet2CIDR:
    Default: 10.0.32.0/19
    AllowedPattern: ^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\/([0-9]|[1-2][0-9]|3[0-2]))$
    Description: CIDR block for private subnet 2 located in Availability Zone 2.
    Type: String
  PublicSubnet1CIDR:
    Default: 10.0.128.0/20
    AllowedPattern: ^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\/([0-9]|[1-2][0-9]|3[0-2]))$
    Description: CIDR Block for the public DMZ subnet 1 located in Availability Zone 1
    Type: String
  PublicSubnet2CIDR:
    Default: 10.0.144.0/20
    AllowedPattern: ^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\/([0-9]|[1-2][0-9]|3[0-2]))$
    Description: CIDR Block for the public DMZ subnet 2 located in Availability Zone 2
    Type: String
  QSS3BucketName:
    Default: 'aws-quickstart'
    AllowedPattern: ^[0-9a-zA-Z]+([0-9a-zA-Z-]*[0-9a-zA-Z])*$
    ConstraintDescription: Quick Start bucket name can include numbers, lowercase
      letters, uppercase letters, and hyphens (-). It cannot start or end with a hyphen
      (-).
    Description: S3 bucket name for the Quick Start assets. Quick Start bucket name
      can include numbers, lowercase letters, uppercase letters, and hyphens (-).
      It cannot start or end with a hyphen (-).
    Type: String
  QSS3KeyPrefix:
    Default: 'quickstart-atlassian-services/'
    AllowedPattern: ^[0-9a-zA-Z-/]*$
    ConstraintDescription: Quick Start key prefix can include numbers, lowercase letters,
      uppercase letters, hyphens (-), and forward slash (/).
    Description: S3 key prefix for the Quick Start assets. Quick Start key prefix
      can include numbers, lowercase letters, uppercase letters, hyphens (-), and
      forward slash (/).
    Type: String
  VPCCIDR:
    Default: 10.0.0.0/16
    AllowedPattern: ^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\/([0-9]|[1-2][0-9]|3[0-2]))$
    Description: CIDR Block for the VPC
    Type: String
Conditions:
  GovCloudCondition: !Equals
    - !Ref 'AWS::Region'
    - us-gov-west-1
Resources:
  VPCStack:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub
        - https://${QSS3BucketName}.${QSS3Region}.amazonaws.com/${QSS3KeyPrefix}submodules/quickstart-aws-vpc/templates/aws-vpc.template
        - QSS3Region: !If
            - GovCloudCondition
            - s3-us-gov-west-1
            - s3
      Parameters:
        AvailabilityZones:
          !Join
            - ','
            - !Ref 'AvailabilityZones'
        KeyPairName: !Ref 'KeyPairName'
        NATInstanceType: !Ref 'NATInstanceType'
        NumberOfAZs: '2'
        PrivateSubnet1ACIDR: !Ref 'PrivateSubnet1CIDR'
        PrivateSubnet2ACIDR: !Ref 'PrivateSubnet2CIDR'
        PublicSubnet1CIDR: !Ref 'PublicSubnet1CIDR'
        PublicSubnet2CIDR: !Ref 'PublicSubnet2CIDR'
        VPCCIDR: !Ref 'VPCCIDR'
  BastionStack:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub
        - https://${QSS3BucketName}.${QSS3Region}.amazonaws.com/${QSS3KeyPrefix}templates/quickstart-bastion-for-atlassian-services.yaml
        - QSS3Region: !If
            - GovCloudCondition
            - s3-us-gov-west-1
            - s3
      Parameters:
        AccessCIDR: !Ref AccessCIDR
        KeyName: !Ref 'KeyPairName'
        Subnet: !GetAtt VPCStack.Outputs.PublicSubnet1ID
        VPC: !GetAtt VPCStack.Outputs.VPCID
  AtlassianDCDeploymentsPlaybookDocument:
    Type: AWS::SSM::Document
    Properties:
      DocumentType: Command
      Name: !Sub "${ExportPrefix}RunAutomationPlaybook"
      Content:
        schemaVersion: "2.2"
        description: "Use this document to run Ansible Playbooks from the atlassian deployment automation repo"
        parameters:
          Playbook:
            type: "String"
            description: "The Playbook file to run, relative to the repository root."
          InvocationVariables:
            type: "String"
            description: "Variables to apply to the playbook. See playbook documentation for details on required parameters."
            displayType: "textarea"
            allowedPattern: "^$|^\\w+\\=[^\\s|:();&]+(\\s\\w+\\=[^\\s|:();&]+)*$"
          executionTimeout: 
            type: "String"
            default: "14400"
            description: "(Optional) The time in seconds for a command to complete before it is considered to have failed. Default is 3600 (1 hour). Maximum is 172800 (48 hours)."
            allowedPattern: "([1-9][0-9]{0,4})|(1[0-6][0-9]{4})|(17[0-1][0-9]{3})|(172[0-7][0-9]{2})|(172800)"
        mainSteps:
          - action: "aws:runShellScript"
            name: "runShellScript"
            inputs:
              runCommand:
                - "#!/bin/bash"
                - "cd /opt/atlassian/dc-deployments-automation"
                - "export PLAYBOOK_INVOCATION_EXTRA_PARAMS=\"{{InvocationVariables}}\""
                - "./bin/ansible-with-atl-env ./inv/aws_node_local aws_slingshot_backup.yml /var/log/ansible-slingshot.log"
              workingDirectory: "{{ /opt/atlassian/dc-deployments-automation }}"
              timeoutSeconds: "{{ executionTimeout }}"
#         schemaVersion: "2.2"
#         description: "Use this document to run Ansible Playbooks from the atlassian deployment automation repo"
#         parameters:
#           Playbook:
#             type: "String"
#             description: "The Playbook file to run, relative to the repository root. See https://bitbucket.org/atlassian/dc-deployments-automation/src/master/ for playbooks."
#           InvocationVariables:
#             type: "String"
#             description: "Variables to apply to the playbook. See playbook documentation for details on required parameters."
#             displayType: "textarea"
#             allowedPattern: "^$|^\\w+\\=[^\\s|:();&]+(\\s\\w+\\=[^\\s|:();&]+)*$"
#           executionTimeout:
#             type: "String"
#             default: "3600"
#             description: "(Optional) The time in seconds for a command to complete before it is considered to have failed. Default is 3600 (1 hour). Maximum is 172800 (48 hours)."
#             allowedPattern: "([1-9][0-9]{0,4})|(1[0-6][0-9]{4})|(17[0-1][0-9]{3})|(172[0-7][0-9]{2})|(172800)"
#         mainSteps:
#           action: "aws:runShellScript"
#           name: "runShellScript"
#           inputs:
#             runCommand:
#               - "#!/bin/bash"
#               - "cd /opt/atlassian/dc-deployments-automation"
#               - "export PLAYBOOK_INVOCATION_EXTRA_PARAMS='{{InvocationVariables}}'"
#               - "./bin/ansible-with-atl-env ./inv/aws_node_local aws_slingshot_backup.yml /var/log/ansible-slingshot.log"
#             workingDirectory: "{{ /opt/atlassian/dc-deployments-automation }}"
#             timeoutSeconds: "{{ executionTimeout }}"
Outputs:
  DefaultKey:
    Description: Default Ec2 keypair name
    Value: !Ref 'KeyPairName'
    Export:
      Name: !Sub '${ExportPrefix}DefaultKey'
  PrivateSubnets:
    Description: A list of 2 Private subnets
    Value: !Join [ ',', [ !GetAtt VPCStack.Outputs.PrivateSubnet1AID, !GetAtt VPCStack.Outputs.PrivateSubnet2AID ]]
    Export:
      Name: !Sub '${ExportPrefix}PriNets'
  PublicSubnets:
    Description: A list of 2 Public subnets
    Value: !Join [ ',', [ !GetAtt VPCStack.Outputs.PublicSubnet1ID, !GetAtt VPCStack.Outputs.PublicSubnet2ID ]]
    Export:
      Name: !Sub '${ExportPrefix}PubNets'
  VPCID:
    Description: Atlassian Services VPC ID
    Value: !GetAtt VPCStack.Outputs.VPCID
    Export:
      Name: !Sub '${ExportPrefix}VPCID'
  BastionPubIp:
    Description: The Public IP to ssh to the Bastion
    Value: !GetAtt 'BastionStack.Outputs.BastionPubIp'
  NatGatewayIP1:
    Description: Public IP for NAT gateway in Private Subnet 1
    Value: !GetAtt VPCStack.Outputs.NAT1EIP
    Export:
      Name: !Sub '${ExportPrefix}NAT1EIP'
  NatGatewayIP2:
    Description: Public IP for NAT gateway in Private Subnet 2
    Value: !GetAtt VPCStack.Outputs.NAT2EIP
    Export:
      Name: !Sub '${ExportPrefix}NAT2EIP'